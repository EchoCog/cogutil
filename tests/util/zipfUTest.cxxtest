/** zipfUTest.cxxtest ---
 *
 * Copyright (C) 2019 Linas Vepstas
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License v3 as
 * published by the Free Software Foundation and including the exceptions
 * at http://opencog.org/wiki/Licenses
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program; if not, write to:
 * Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 */

#include <opencog/util/zipf.h>

using namespace opencog;

class zipfUTest : public CxxTest::TestSuite
{
public:

	void test_zipf()
	{
		int sz = 300;
		Zipf zipf(1.0, sz-1);
		printf("\nzipf: done with init\n");

		int* dist = new int[sz];
		for (int i = 0; i < sz; i++)
			dist[i] = 0;

		for (size_t s = 0; s < 1623000; s++)
			dist[zipf.draw()] ++;

		double norm = 1.0 / dist[1];
		for (int i = 1; i < 30; i++)
		{
			double approx = norm * i * dist[i];
			printf("Zipf rank=%d mass=%d approx=%g\n", i, dist[i], approx);

			// Should have approx == 1.0, approximately.
			TS_ASSERT_DELTA(approx, 1.0, 0.01);
		}
		for (int i = 30; i < 50; i++)
		{
			double approx = norm * i * dist[i];
			printf("Zipf rank=%d mass=%d approx=%g\n", i, dist[i], approx);

			// Should have approx == 1.0, approximately.
			TS_ASSERT_DELTA(approx, 1.0, 0.03);
		}
		for (int i = 50; i < 150; i++)
		{
			double approx = norm * i * dist[i];
			printf("Zipf rank=%d mass=%d approx=%g\n", i, dist[i], approx);

			// Should have approx == 1.0, approximately.
			TS_ASSERT_DELTA(approx, 1.0, 0.06);
		}
	}
};
